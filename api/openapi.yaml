openapi: 3.0.0
info:
  contact:
    email: stelzo@steado.de
    name: Survival
    url: https://discord.gg/3EtHskZD8h
  description: "# Open Ankama Developer Community\nThe all-in-one toolbelt for your\
    \ next Ankama related project.\n\n## Versions\n- [Dofus 2](https://docs.dofusdu.de/dofus2/)\n\
    - [Dofus 3](https://docs.dofusdu.de/dofus3/)\n  - v1 [latest] (you are here) \n\
    \n## Client SDKs\n- [Javascript](https://github.com/dofusdude/dofusdude-js) `npm\
    \ i dofusdude-js --save`\n- [Typescript](https://github.com/dofusdude/dofusdude-ts)\
    \ `npm i dofusdude-ts --save`\n- [Go](https://github.com/dofusdude/dodugo) `go\
    \ get -u github.com/dofusdude/dodugo`\n- [Python](https://github.com/dofusdude/dofusdude-py)\
    \ `pip install dofusdude`\n- [Java](https://github.com/dofusdude/dofusdude-java)\
    \ Maven with GitHub packages setup\n\nEverything, including this site, is generated\
    \ out of the [Docs Repo](https://github.com/dofusdude/api-docs). Consider it the\
    \ Single Source of Truth. If there is a problem with the SDKs, create an issue\
    \ there.\n\nYour favorite language is missing? Please let me know!\n\n# Main Features\n\
    - ü•∑ **Seamless Auto-Update** load data in the background when a new Dofus version\
    \ is released and serving it within 10 minutes with atomic data source switching.\
    \ No downtime and no effects for the user, just always up-to-date.\n\n- ‚ö° **Blazingly\
    \ Fast** all data in-memory, aggressive caching over short time spans, HTTP/2\
    \ multiplexing, written in Go, optimized for low latency, hosted on bare metal\
    \ in üá©üá™.\n\n- üì® **Almanax Discord Integration** Use the endpoints as a dev\
    \ or the official [Web Client](https://discord.dofusdude.com) as a user.\n\n-\
    \ ü©∏ **Dofus 3 Beta** from stable to bleeding edge by replacing /dofus3 with /dofus3beta.\n\
    \n- üó£Ô∏è **Multilingual** supporting _en_, _fr_, _es_, _pt_, _de_.\n\n- üß† **Search\
    \ by Relevance** allowing typos in name and description, handled by language specific\
    \ text analysis and indexing.\n\n- üïµÔ∏è **Official Sources** generated from actual\
    \ data from the game.\n\n... and much more on the Roadmap on my [Discord](https://discord.gg/3EtHskZD8h).\n"
  license:
    name: GPL-3.0
    url: https://github.com/dofusdude/doduapi/blob/main/LICENSE
  title: dofusdude
  version: 1.0.0-rc.6
servers:
- description: API
  url: https://api.dofusdu.de
tags:
- description: The Dofus Almanax
  name: almanax
- description: Consumable Items
  name: consumables
- description: Cosmetic Equipment
  name: cosmetics
- description: Weapons and Equipment
  name: equipment
- description: General Overview Endpoints
  name: game
- description: Metadata for using the API more efficiently
  name: meta
- description: Mounts
  name: mounts
- description: Quest Items
  name: quest items
- description: Resources
  name: resources
- description: Sets
  name: sets
- description: Actively calling you for updates for various events
  name: webhooks
paths:
  /{game}/v1/{language}/items/search:
    get:
      description: Search in all names and descriptions of Dofus items (including
        all subtypes) with a query.
      operationId: get-items-all-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: fr
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: atcham
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 190
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/ListItemGeneral'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search All Items
      tags:
      - game
      x-stoplight:
        id: eeoi1h7wagrmw
  /{game}/v1/{language}/mounts/search:
    get:
      description: Search in all names and descriptions of mounts with a query.
      operationId: get-mounts-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: fr
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: Dor√©e
          type: string
        style: form
      - description: only results with the translated family name
        explode: true
        in: query
        name: "filter[family.name]"
        required: false
        schema:
          example: Dragodinde
          type: string
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: only results with the unique family id
        explode: true
        in: query
        name: "filter[family.id]"
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/Mount'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Mounts
      tags:
      - mounts
      x-stoplight:
        id: 55fkjddmfhh7n
  /{game}/v1/{language}/sets/search:
    get:
      description: Search in all names and descriptions of sets with a query.
      operationId: get-sets-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: Des
          type: string
        style: form
      - description: only results where the equipment with the highest level is above
          or equal to this value
        explode: true
        in: query
        name: "filter[min_highest_equipment_level]"
        required: false
        schema:
          example: 195
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results where the equipment with the highest level is below
          or equal to this value
        explode: true
        in: query
        name: "filter[max_highest_equipment_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "filter sets based on if they only got cosmetic items in it.\
          \ If true, the item ids are for the cosmetic endpoints instead of equipment."
        explode: true
        in: query
        name: "filter[contains_cosmetics_only]"
        required: false
        schema:
          type: boolean
        style: form
      - description: filter sets based on if they got any cosmetic items in it
        explode: true
        in: query
        name: "filter[contains_cosmetics]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/ListEquipmentSet'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Sets
      tags:
      - sets
      x-stoplight:
        id: 7pwfbuzuxnnuq
  /{game}/v1/{language}/items/quest/search:
    get:
      description: Search in all names and descriptions of quest items with a query.
      operationId: get-items-quest-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: es
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: Ficha
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 60
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 70
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - vigilantes
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListItem'
                type: array
          description: Quest Items Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Quest Items
      tags:
      - quest items
      x-stoplight:
        id: e7dmshthuyg5m
  /{game}/v1/{language}/items/consumables/search:
    get:
      description: Search in all names and descriptions of consumable items with a
        query.
      operationId: get-items-consumables-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: Wholewrite
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 1
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - bread
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/ListItem'
                type: array
          description: Consumables Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Consumables
      tags:
      - consumables
      x-stoplight:
        id: 6ogh4aj4k3vns
  /{game}/v1/{language}/items/resources/search:
    get:
      description: Search in all names and descriptions of resource items with a query.
      operationId: get-items-resource-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: snowdew
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 150
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - plant
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/ListItem'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Resources
      tags:
      - resources
      x-stoplight:
        id: l2f1uw9hdicac
  /{game}/v1/{language}/search:
    get:
      description: Search in all names and descriptions of all supported types in
        the game. For the list of supported types see the endpoint /dofus3/meta/search/types.
      operationId: get-game-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: paztek
          type: string
        style: form
      - description: only results with all specific type
        explode: false
        in: query
        name: "filter[search_index]"
        required: false
        schema:
          example:
          - items-equipment
          items:
            enum:
            - items-consumables
            - items-cosmetics
            - items-resources
            - items-equipment
            - items-quest_items
            - mounts
            - sets
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: adds fields from the item search to the list entries if the hit
          is a item. Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[item]"
        required: false
        schema:
          example:
          - level
          items:
            enum:
            - level
            - image_urls
            - type
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "multi-filter results with the english item type name, including\
          \ \"mount\" and \"set\" from filter[type]. Add with \"wood\" or \"+wood\"\
          \ and exclude with \"-wood\"."
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/GameSearch'
                type: array
                x-examples:
                  Example 1:
                  - name: Paztek Sandals
                    ankama_id: 20463
                    type: items-equipment
                  - name: Paztek Mask
                    ankama_id: 20465
                    type: items-equipment
                  - name: Paztek Cloak
                    ankama_id: 20464
                    type: items-equipment
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Game Search
      tags:
      - game
      x-stoplight:
        id: zxx3tt0z25gz8
  /{game}/v1/{language}/items/equipment/search:
    get:
      description: Search in all names and descriptions of equipment items with a
        query.
      operationId: get-items-equipment-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: nidas
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 150
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/ListItem'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Equipment
      tags:
      - equipment
      x-stoplight:
        id: 4lzcb55gkjj2z
  /{game}/v1/{language}/items/cosmetics/search:
    get:
      description: Search in all names and descriptions of cosmetic items with a query.
      operationId: get-cosmetics-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: nedora
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 1
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 2
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 8
          example: 8
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - wings
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/ListItem'
                type: array
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Search Cosmetics
      tags:
      - cosmetics
      x-stoplight:
        id: mw8gyg65z17wf
  /{game}/v1/{language}/items/cosmetics/{ankama_id}:
    get:
      description: Retrieve a specific cosmetic item with id.
      operationId: get-cosmetics-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 24132
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Cosmetics
      tags:
      - cosmetics
      x-internal: false
      x-stoplight:
        id: a0ks17l0zqqaj
  /{game}/v1/{language}/items/resources/{ankama_id}:
    get:
      description: Retrieve a specific resource item with id.
      operationId: get-items-resources-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 7295
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Resource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Resources
      tags:
      - resources
      x-stoplight:
        id: viqn5ujmwoi9s
  /{game}/v1/{language}/items/equipment/{ankama_id}:
    get:
      description: Retrieve a specific equipment item with id.
      operationId: get-items-equipment-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 26009
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Weapon'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Equipment
      tags:
      - equipment
      x-stoplight:
        id: e2j6pr8n8112g
  /{game}/v1/{language}/items/consumables/{ankama_id}:
    get:
      description: Retrieve a specific consumable item with id.
      operationId: get-items-consumables-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 17206
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Resource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Consumables
      tags:
      - consumables
      x-stoplight:
        id: n40tefsprc7oq
  /{game}/v1/{language}/items/quest/{ankama_id}:
    get:
      description: Retrieve a specific quest item with id.
      operationId: get-item-quest-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 25256
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Resource'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Quest Items
      tags:
      - quest items
      x-stoplight:
        id: 74dxhpw46pxzc
  /{game}/v1/{language}/mounts/{ankama_id}:
    get:
      description: Retrieve a specific mount with id.
      operationId: get-mounts-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 180
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Mount'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Mounts
      tags:
      - mounts
      x-stoplight:
        id: pzqoy2btp2qkn
  /{game}/v1/{language}/sets/{ankama_id}:
    get:
      description: Retrieve a specific set with id.
      operationId: get-sets-single
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: identifier
        explode: false
        in: path
        name: ankama_id
        required: true
        schema:
          example: 499
          type: integer
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/EquipmentSet'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: Single Sets
      tags:
      - sets
      x-stoplight:
        id: 7h3o04n689qab
  /{game}/v1/{language}/sets:
    get:
      description: Retrieve a list of sets.
      operationId: get-sets-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - description: only results where the equipment with the highest level is above
          or equal to this value
        explode: true
        in: query
        name: "filter[min_highest_equipment_level]"
        required: false
        schema:
          example: 190
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results where the equipment with the highest level is below
          or equal to this value
        explode: true
        in: query
        name: "filter[max_highest_equipment_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 20
          format: int32
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[set]"
        required: false
        schema:
          example:
          - equipment_ids
          items:
            enum:
            - effects
            - equipment_ids
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "filter sets based on if they only got cosmetic items in it.\
          \ If true, the item ids are for the cosmetic endpoints instead of equipment."
        explode: true
        in: query
        name: "filter[contains_cosmetics_only]"
        required: false
        schema:
          type: boolean
        style: form
      - description: filter sets based on if they got cosmetic items in it.
        explode: true
        in: query
        name: "filter[contains_cosmetics]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEquipmentSets'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Sets
      tags:
      - sets
      x-stoplight:
        id: s3zlet293u7sh
  /{game}/v1/{language}/mounts:
    get:
      description: Retrieve a list of mounts.
      operationId: get-mounts-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: only results with the translated family name
        explode: true
        in: query
        name: "filter[family.name]"
        required: false
        schema:
          example: Dragoturkey
          type: string
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 10
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[mount]"
        required: false
        schema:
          example:
          - effects
          items:
            enum:
            - effects
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: only results with the unique family id
        explode: true
        in: query
        name: "filter[family.id]"
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ListMounts'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Mounts
      tags:
      - mounts
      x-stoplight:
        id: gy9ldukmg67hy
  /{game}/v1/{language}/items/equipment:
    get:
      description: Retrieve a list of equipment items.
      operationId: get-items-equipment-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: en
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: desc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 60
          minimum: 0
          type: integer
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 5
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[item]"
        required: false
        schema:
          example:
          - is_weapon
          items:
            enum:
            - recipe
            - description
            - conditions
            - effects
            - is_weapon
            - pods
            - parent_set
            - critical_hit_probability
            - critical_hit_bonus
            - max_cast_per_turn
            - ap_cost
            - range
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - sword
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Equipment
      tags:
      - equipment
      x-stoplight:
        id: z7ihi4fuba4rk
  /{game}/v1/{language}/items/resources:
    get:
      description: Retrieve a list of resource items.
      operationId: get-items-resources-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: desc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 160
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 190
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 10
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[item]"
        required: false
        schema:
          example:
          - recipe
          items:
            enum:
            - recipe
            - description
            - conditions
            - effects
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - wood
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Resources
      tags:
      - resources
      x-stoplight:
        id: z2jx5o5pjumhs
  /{game}/v1/{language}/items/consumables:
    get:
      description: Retrieve a list of consumable items.
      operationId: get-items-consumables-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 150
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 180
          type: integer
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 2
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[item]"
        required: false
        schema:
          example:
          - recipe
          items:
            enum:
            - recipe
            - description
            - conditions
            - effects
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - chest
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Consumables
      tags:
      - consumables
      x-stoplight:
        id: g2xcp6fribgyf
  /{game}/v1/{language}/items/quest:
    get:
      description: Retrieve a list of quest items.
      operationId: get-items-quest-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: fr
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: desc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 1
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 50
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 5
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[item]"
        required: false
        schema:
          example:
          - recipe
          items:
            enum:
            - recipe
            - description
            - conditions
            - effects
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - sufokia
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Quest Items
      tags:
      - quest items
      x-stoplight:
        id: qsq51akecj0r0
  /{game}/v1/{language}/items/cosmetics:
    get:
      description: Retrieve a list of cosmetic items.
      operationId: get-cosmetics-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: fr
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 5
          type: integer
        style: form
      - description: size of the results from the list. -1 disables pagination and
          gets all in one response.
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          example: 5
          minimum: -1
          type: integer
        style: form
      - description: "page number based on the current page[size]. So you could get\
          \ page 1 with 8 entrys and page 2 would have entries 8 to 16."
        explode: true
        in: query
        name: "page[number]"
        required: false
        schema:
          example: 1
          minimum: 0
          type: integer
        style: form
      - description: adds fields from their detail endpoint to the item list entries.
          Multiple comma separated values allowed.
        explode: false
        in: query
        name: "fields[item]"
        required: false
        schema:
          example:
          - recipe
          items:
            enum:
            - recipe
            - description
            - conditions
            - effects
            - is_weapon
            - pods
            - parent_set
            - critical_hit_probability
            - critical_hit_bonus
            - max_cast_per_turn
            - ap_cost
            - range
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List Cosmetics
      tags:
      - cosmetics
      x-stoplight:
        id: mlmwp9s8utn2j
  /{game}/v1/{language}/mounts/all:
    get:
      description: |-
        Retrieve all mounts with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-mounts-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: only results with the translated family name
        explode: true
        in: query
        name: "filter[family.name]"
        required: false
        schema:
          example: Dragoturkey
          type: string
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: only results with the unique family id
        explode: true
        in: query
        name: "filter[family.id]"
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMounts'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Mounts
      tags:
      - mounts
      x-stoplight:
        id: 35hwizajcz3g7
  /{game}/v1/{language}/sets/all:
    get:
      description: |-
        Retrieve all sets with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-sets-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - description: only results where the equipment with the highest level is above
          or equal to this value
        explode: true
        in: query
        name: "filter[min_highest_equipment_level]"
        required: false
        schema:
          example: 190
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results where the equipment with the highest level is below
          or equal to this value
        explode: true
        in: query
        name: "filter[max_highest_equipment_level]"
        required: false
        schema:
          example: 200
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: "filter sets based on if they only got cosmetic items in it.\
          \ If true, the item ids are for the cosmetic endpoints instead of equipment."
        explode: true
        in: query
        name: "filter[contains_cosmetics_only]"
        required: false
        schema:
          type: boolean
        style: form
      - description: filter sets based on if they got cosmetic items in it.
        explode: true
        in: query
        name: "filter[contains_cosmetics]"
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    sets:
                    - ankama_id: 0
                      name: string
                      items: 0
                      level: 0
              schema:
                $ref: '#/components/schemas/ListEquipmentSets'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Sets
      tags:
      - sets
      x-stoplight:
        id: rzxp5sotapqe6
  /{game}/v1/{language}/items/cosmetics/all:
    get:
      description: |-
        Retrieve all cosmetic items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-cosmetics-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: fr
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 5
          type: integer
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Cosmetics
      tags:
      - cosmetics
      x-stoplight:
        id: 07si7hjof1qpt
  /{game}/v1/{language}/items/quest/all:
    get:
      description: |-
        Retrieve all quest items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-items-quest-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: fr
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: desc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 1
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 50
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Quest Items
      tags:
      - quest items
      x-stoplight:
        id: mgmt97sgtrhja
  /{game}/v1/{language}/items/consumables/all:
    get:
      description: |-
        Retrieve all consumable items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-items-consumables-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 150
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 180
          type: integer
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Consumables
      tags:
      - consumables
      x-stoplight:
        id: llcg4hmp9wucr
  /{game}/v1/{language}/items/resources/all:
    get:
      description: |-
        Retrieve all resource items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-items-resources-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: desc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 160
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 190
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Resources
      tags:
      - resources
      x-stoplight:
        id: 1wtcbwhh04jmq
  /{game}/v1/{language}/items/equipment/all:
    get:
      description: |-
        Retrieve all equipment items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      operationId: get-all-items-equipment-list
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - es
          - pt
          example: en
          maxLength: 2
          minLength: 2
          type: string
        style: simple
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      - description: "sort the resulting list by level, default unsorted"
        explode: true
        in: query
        name: "sort[level]"
        required: false
        schema:
          enum:
          - asc
          - desc
          example: desc
          type: string
        style: form
      - description: only results which level is equal or above this value
        explode: true
        in: query
        name: "filter[min_level]"
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: only results which level is equal or below this value
        explode: true
        in: query
        name: "filter[max_level]"
        required: false
        schema:
          example: 60
          minimum: 0
          type: integer
        style: form
      - description: optional compression for saving bandwidth
        explode: false
        in: header
        name: Accept-Encoding
        required: false
        schema:
          enum:
          - gzip
          type: string
        style: simple
      - description: multi-filter results with the english type name. Add with "wood"
          or "+wood" and exclude with "-wood".
        explode: false
        in: query
        name: "filter[type.name_id]"
        required: false
        schema:
          example:
          - boots
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItems'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: ""
      summary: List All Equipment
      tags:
      - equipment
      x-stoplight:
        id: wbxzhlcid1l0w
  /dofus2/{language}/almanax:
    get:
      description: "Get a range of dates, defaults to today + 6 following days but\
        \ can specified by the query parameters. \n\nfilter[bonus_type] can be used\
        \ seperately and does not have an effect on the other parameters.\n\nrange[from]\
        \ changes the start date, everything else defaults to 6 following dates from\
        \ this start date.\n\nrange[to] when used without anything else, it will use\
        \ today as start date and this parameter as end. All ranges are inclusive.\n\
        \nrange[from] + range[to] = inclusive range over the specified dates, should\
        \ never be farther apart than 35 days.\n\nrange[from|to] + range[size] no\
        \ need to specify the date, just following days with [from] (0 is today) or\
        \ go backwards in time with only [to] and [size].\n\nNot all combinations\
        \ are listed but this should give you an idea how to they could work."
      operationId: get-almanax-range
      parameters:
      - description: code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - it
          - es
          example: fr
          type: string
        style: simple
      - description: "ids from meta/{language}/almanax/bonuses"
        explode: true
        in: query
        name: "filter[bonus_type]"
        required: false
        schema:
          example: experience-points
          type: string
        style: form
      - description: yyyy-mm-dd
        explode: true
        in: query
        name: "range[from]"
        required: false
        schema:
          example: 2016-09-15
          format: date
          type: string
        style: form
      - description: yyyy-mm-dd
        explode: true
        in: query
        name: "range[to]"
        required: false
        schema:
          example: 2016-09-28
          format: date
          type: string
        style: form
      - description: size of the returned range
        explode: true
        in: query
        name: "range[size]"
        required: false
        schema:
          example: -1
          format: int32
          maximum: 370
          minimum: -1
          type: integer
        style: form
      - description: "determine what the current time is. If you live in Brazil, \"\
          today\" will be hours apart from Paris. Use your timezone to get results\
          \ relative to your location."
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: Europe/Paris
          example: Europe/Paris
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                items:
                  $ref: '#/components/schemas/Almanax'
                type: array
          description: ""
      summary: Almanax Range
      tags:
      - almanax
      x-stoplight:
        id: fy8l7o3sz1jyo
  /dofus2/{language}/almanax/{date}:
    get:
      description: Get a single date. There are not more details in the returned object
        than the normal range endpoint.
      operationId: get-almanax-date
      parameters:
      - description: code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - it
          - es
          example: fr
          type: string
        style: simple
      - description: yyyy-mm-dd
        explode: false
        in: path
        name: date
        required: true
        schema:
          example: 2020-07-14
          format: date
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Almanax'
          description: ""
      summary: Single Almanax Date
      tags:
      - almanax
      x-stoplight:
        id: d0000xjgaenyh
  /dofus3beta/v1/meta/elements:
    get:
      description: Get the mappings for all specific elements that are linked in the
        dataset. All names are english. Translations are not needed because of a global
        unique id which is the index inside the array. Future elements will get a
        higher id.
      operationId: get-meta-elements
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                id = index:
                  value:
                  - Vitality
                  - Intelligence
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Effects and Condition Elements
      tags:
      - meta
      x-stoplight:
        id: 4oyiu8nbwwgds
  /{game}/v1/meta/version:
    get:
      description: The current game version of the hosted data.
      operationId: get-meta-version
      parameters:
      - description: game main 'dofus3' or beta channel 'dofus3beta'
        explode: false
        in: path
        name: game
        required: true
        schema:
          enum:
          - dofus3
          - dofus3beta
          example: dofus3beta
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Version'
          description: ""
      summary: Game Version
      tags:
      - meta
      x-stoplight:
        id: ha9mde87rn0in
  /dofus3beta/v1/meta/search/types:
    get:
      description: "Get all types for /{game}/v1/{lang}/search available for filtering.\
        \ All names are english for comparing them inside applications. Order is fixed\
        \ so you can compare indices instead of strings."
      operationId: get-game-search-types
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                List:
                  value:
                  - items-consumables
                  - items-cosmetics
                  - items-resources
                  - items-equipment
                  - items-quest_items
                  - mounts
                  - sets
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Available Game Search Types
      tags:
      - meta
      x-stoplight:
        id: v67mknkhaif2h
  /dofus3beta/v1/meta/items/types:
    get:
      description: |-
        Get all types of all items. Primarily used for filtering more detailed types in listings or search endpoints.
        All names are english for comparing them inside applications.
        Ordering is not guaranteed to persist with game updates.
      operationId: get-item-types
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                List:
                  value:
                  - items-consumables
                  - items-cosmetics
                  - items-resources
                  - items-equipment
                  - items-quest_items
                  - mounts
                  - sets
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Available Item Types
      tags:
      - meta
      x-stoplight:
        id: j8a5zpi8i20xe
  /dofus2/meta/{language}/almanax/bonuses:
    get:
      description: Get all the available bonuses and their id for filtering them in
        the range endpoint.
      operationId: get-meta-almanax-bonuses
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - it
          - es
          example: fr
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                en:
                  value:
                  - id: reward-bonus
                    name: Reward Bonus
                  - id: loot
                    name: Loot
                  - id: plenty-of-fish
                    name: Plenty of fish
              schema:
                items:
                  $ref: '#/components/schemas/get_meta_almanax_bonuses_200_response_inner'
                type: array
                x-examples:
                  example-1:
                  - id: reward-bonus
                    name: Reward Bonus
                  - id: loot
                    name: Loot
                  - id: plenty-of-fish
                    name: Plenty of fish
          description: OK
      summary: Available Almanax Bonuses
      tags:
      - meta
      x-stoplight:
        id: y3rp6gd28quli
  /dofus2/meta/{language}/almanax/bonuses/search:
    get:
      description: Search all the available bonuses and their id for filtering them
        in the range endpoint.
      operationId: get-meta-almanax-bonuses-search
      parameters:
      - description: a valid language code
        explode: false
        in: path
        name: language
        required: true
        schema:
          enum:
          - en
          - fr
          - de
          - it
          - es
          example: fr
          type: string
        style: simple
      - description: case sensitive search query
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: abond
          type: string
        style: form
      - description: maximum number of returned results
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                en:
                  value:
                  - id: reward-bonus
                    name: Reward Bonus
                  - id: loot
                    name: Loot
                  - id: plenty-of-fish
                    name: Plenty of fish
              schema:
                items:
                  $ref: '#/components/schemas/get_meta_almanax_bonuses_200_response_inner'
                type: array
                x-examples:
                  example-1:
                  - id: reward-bonus
                    name: Reward Bonus
                  - id: loot
                    name: Loot
                  - id: plenty-of-fish
                    name: Plenty of fish
          description: OK
      summary: Search Available Almanax Bonuses
      tags:
      - meta
      x-stoplight:
        id: wacmug1sb1oe9
  /meta/webhooks/twitter:
    get:
      description: 'Get a list of all available subscriptions. '
      operationId: get-meta-webhooks-twitter
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    subscriptions:
                    - string
              schema:
                $ref: '#/components/schemas/get_meta_webhooks_twitter_200_response'
          description: OK
      summary: Get Twitter Hook Metainfo
      tags:
      - webhooks
      x-stoplight:
        id: x2su9os7cdw6n
  /meta/webhooks/rss:
    get:
      description: 'Get a list of all available subscriptions. '
      operationId: get-meta-webhooks-rss
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_meta_webhooks_twitter_200_response'
          description: OK
      summary: Get RSS Hook Metainfo
      tags:
      - webhooks
      x-stoplight:
        id: ryea84v1mw1ak
  /meta/webhooks/almanax:
    get:
      description: 'Get a list of all available subscriptions. '
      operationId: get-meta-webhooks-almanax
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/get_meta_webhooks_twitter_200_response'
          description: OK
      summary: Get Almanax Hook Metainfo
      tags:
      - webhooks
      x-stoplight:
        id: 4lrj2cmhjnm2s
  /webhooks/rss/{id}:
    delete:
      description: Delete a Webhook from the service.
      operationId: delete-webhooks-rss-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unregister RSS Hook
      tags:
      - webhooks
      x-stoplight:
        id: dzqt93ubm594i
    get:
      description: Retrieve details about an existing RSS Webhook with a given uuid.
      operationId: get-webhooks-rss-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    id: string
                    whitelist: null
                    blacklist: null
                    subscriptions:
                    - dofus3-fr-official-news
                    format: discord
                    preview_length: 150
                    created_at: 2022-10-25T15:32:37.406281+02:00
                    last_fired_at: 2022-10-25T15:35:37.103240+02:00
                    updated_at: 2022-10-25T15:32:37.406281+02:00
              schema:
                $ref: '#/components/schemas/RssWebhook'
          description: OK
      summary: Get RSS Hook
      tags:
      - webhooks
      x-stoplight:
        id: u2trp6aa29zke
    put:
      description: "Update the details of a RSS Webhook. All fields are optional and\
        \ arrays will be overwritten, so always put all selected items of an array."
      operationId: put-webhooks-rss-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  whitelist: null
                  blacklist: null
                  subscriptions: null
                  preview_length: 60
            schema:
              $ref: '#/components/schemas/PutRSSWebhook'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    id: string
                    whitelist: null
                    blacklist: null
                    subscriptions:
                    - dofus3-fr-official-news
                    format: discord
                    preview_length: 150
                    created_at: 2022-10-25T15:32:37.406281+02:00
                    last_fired_at: 2022-10-25T15:35:37.103240+02:00
                    updated_at: 2022-10-25T15:32:37.406281+02:00
              schema:
                $ref: '#/components/schemas/RssWebhook'
          description: OK
      summary: Update RSS Hook
      tags:
      - webhooks
      x-stoplight:
        id: gxa2aqic6jm2e
  /webhooks/twitter/{id}:
    delete:
      description: Delete a Webhook from the service.
      operationId: delete-webhooks-twitter-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unregister Twitter Hook
      tags:
      - webhooks
      x-stoplight:
        id: 4o1c8msan9y9v
    get:
      description: Retrieve details about an existing Twitter Webhook with a given
        uuid.
      operationId: get-webhooks-twitter-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    whitelist:
                    - unity
                    blacklist:
                    - retro
                    subscriptions:
                    - DOFUS_EN
                    format: discord
                    preview_length: 280
                    created_at: 2022-10-25T15:32:37.406281+02:00
                    last_fired_at: 2022-10-25T15:35:37.103240+02:00
                    updated_at: 2022-10-25T15:32:37.406281+02:00
              schema:
                $ref: '#/components/schemas/TwitterWebhook'
          description: OK
      summary: Get Twitter Hook
      tags:
      - webhooks
      x-stoplight:
        id: b17dskp86rnqw
    put:
      description: "Update the details of a Twitter Webhook. All fields are optional\
        \ and arrays will be overwritten, so always put all selected items of an array."
      operationId: put-webhooks-twitter-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  whitelist:
                  - retro
                  blacklist: null
                  subscriptions:
                  - dofus3-en-official-changelog
                  preview_length: null
            schema:
              $ref: '#/components/schemas/PutTwitterWebhook'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    whitelist:
                    - unity
                    blacklist:
                    - retro
                    subscriptions:
                    - DOFUS_EN
                    format: discord
                    preview_length: 280
                    created_at: 2022-10-25T15:32:37.406281+02:00
                    last_fired_at: 2022-10-25T15:35:37.103240+02:00
                    updated_at: 2022-10-25T15:32:37.406281+02:00
              schema:
                $ref: '#/components/schemas/TwitterWebhook'
          description: OK
      summary: Update Twitter Hook
      tags:
      - webhooks
      x-stoplight:
        id: qp6uqqs05jye4
  /webhooks/almanax/{id}:
    delete:
      description: Delete a Webhook from the service.
      operationId: delete-webhooks-almanax-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unregister Almanax Hook
      tags:
      - webhooks
      x-stoplight:
        id: plnosst21p855
    get:
      description: Retrieve details about an existing Almanax Webhook with a given
        uuid.
      operationId: get-webhooks-almanax-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    daily_settings:
                      timezone: Europe/Paris
                      midnight_offset: 0
                    bonus_whitelist:
                    - plenty-to-harvest
                    bonus_blacklist: null
                    subscriptions:
                    - dofus3_en
                    iso_date: false
                    mentions:
                      kolossium-experience:
                      - discord_id: 1234
                        is_role: true
                        ping_days_before: null
                    intervals:
                    - daily
                    weekly_weekday: sunday
                    created_at: 2019-08-24T14:15:22Z
                    last_fired_at: 2019-08-24T14:15:22Z
                    updated_at: 2019-08-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/AlmanaxWebhook'
          description: OK
      summary: Get Almanax Hook
      tags:
      - webhooks
      x-stoplight:
        id: tsnn86pyx3vu8
    put:
      description: "Update the details of an Almanax Webhook. All fields are optional\
        \ and arrays will be overwritten, so always put all selected items of an array."
      operationId: put-webhooks-almanax-id
      parameters:
      - description: the ID returned from the API when creating the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  bonus_whitelist: []
                  bonus_blacklist: null
                  subscriptions: null
                  daily_settings:
                    timezone: Europe/Paris
                    midnight_offset: 0
                  iso_date: false
                  mentions:
                    kolossium-experience:
                    - discord_id: 1234
                      is_role: true
                      ping_days_before: null
                  intervals:
                  - daily
                  weekly_weekday: sunday
            schema:
              $ref: '#/components/schemas/PutAlmanaxWebhook'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    daily_settings:
                      timezone: Europe/Paris
                      midnight_offset: 0
                    bonus_whitelist:
                    - plenty-to-harvest
                    bonus_blacklist: null
                    subscriptions:
                    - dofus3_en
                    iso_date: false
                    mentions:
                      kolossium-experience:
                      - discord_id: 1234
                        is_role: true
                        ping_days_before: null
                    intervals:
                    - daily
                    weekly_weekday: sunday
                    created_at: 2019-08-24T14:15:22Z
                    last_fired_at: 2019-08-24T14:15:22Z
                    updated_at: 2019-08-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/AlmanaxWebhook'
          description: OK
      summary: Update Almanax Hook
      tags:
      - webhooks
      x-stoplight:
        id: okizp8l5z3on3
  /webhooks/rss:
    post:
      description: Register a new Webhook to post RSS news as soon as they are posted.
      operationId: post-webhooks-rss
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  whitelist:
                  - retro
                  blacklist: null
                  subscriptions:
                  - dofus3-en-official-news
                  format: discord
                  preview_length: 2000
                  callback: https://discord.com/api/webhooks/XYZ
            schema:
              $ref: '#/components/schemas/CreateRSSWebhook'
        description: ""
      responses:
        "200":
          description: OK
      summary: Register RSS Hook
      tags:
      - webhooks
      x-stoplight:
        id: x27z57xp45wte
  /webhooks/twitter:
    post:
      description: Register a new Webhook to post Twitter updates as soon as they
        are posted.
      operationId: post-webhooks-twitter
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  whitelist: null
                  blacklist: null
                  subscriptions:
                  - DOFUSfr
                  format: discord
                  preview_length: 280
                  callback: https://discord.com/api/webhooks/XYZ
            schema:
              $ref: '#/components/schemas/CreateTwitterWebhook'
        description: ""
      responses:
        "200":
          description: OK
      summary: Register Twitter Hook
      tags:
      - webhooks
      x-stoplight:
        id: n7hruj6bwd63z
  /webhooks/almanax:
    post:
      description: Register a new Webhook to post Almanax updates.
      operationId: post-webhooks-almanax
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  bonus_whitelist: null
                  bonus_blacklist: null
                  subscriptions:
                  - dofus3_fr
                  format: discord
                  callback: https://discord.com/api/webhooks/XYZ
                  daily_settings:
                    timezone: Europe/Paris
                    midnight_offset: 0
                  iso_date: false
                  mentions:
                    kolossium-experience:
                    - discord_id: 1234
                      is_role: true
                      ping_days_before: null
                  intervals:
                  - daily
                  weekly_weekday: sunday
            schema:
              $ref: '#/components/schemas/CreateAlmanaxWebhook'
        description: ""
      responses:
        "200":
          description: OK
      summary: Register Almanax Hook
      tags:
      - webhooks
      x-stoplight:
        id: rgb2d0j47fr0l
components:
  schemas:
    ListItemGeneral:
      example:
        level: 5
        item_subtype:
          name_id: name_id
          ankama_id: 1
        name: name
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        type:
          name: name
          id: 6
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/TranslatedId'
        item_subtype:
          $ref: '#/components/schemas/ItemSubtype'
        level:
          type: integer
        image_urls:
          $ref: '#/components/schemas/Images'
      title: ListItemGeneral
      type: object
      x-examples: {}
      x-stoplight:
        id: r5b3ia3ectz8q
    ListItem:
      example:
        critical_hit_probability: 2
        parent_set: ""
        level: 6
        is_weapon: true
        recipe:
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        description: description
        range:
          min: 2
          max: 4
        type:
          name: name
          id: 6
        effects:
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        max_cast_per_turn: 9
        name: name
        ap_cost: 3
        pods: 5
        conditions: ""
        critical_hit_bonus: 7
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/TranslatedId'
        level:
          type: integer
        image_urls:
          $ref: '#/components/schemas/Images'
        recipe:
          items:
            $ref: '#/components/schemas/Recipe'
          nullable: true
          type: array
        description:
          nullable: true
          type: string
          x-stoplight:
            id: t04qfhnlgc4kw
        conditions:
          allOf:
          - $ref: '#/components/schemas/ConditionNode'
          nullable: true
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          nullable: true
          type: array
        is_weapon:
          nullable: true
          type: boolean
        pods:
          nullable: true
          type: integer
        parent_set:
          allOf:
          - $ref: '#/components/schemas/TranslatedId'
          nullable: true
        critical_hit_probability:
          nullable: true
          type: integer
        critical_hit_bonus:
          nullable: true
          type: integer
        max_cast_per_turn:
          nullable: true
          type: integer
        ap_cost:
          nullable: true
          type: integer
        range:
          $ref: '#/components/schemas/Range'
      title: ListItem
      type: object
      x-examples: {}
      x-stoplight:
        id: t7g4fratmdgkx
    Recipe:
      example:
        quantity: 5
        item_subtype: item_subtype
        item_ankama_id: 1
      properties:
        item_ankama_id:
          type: integer
        item_subtype:
          type: string
        quantity:
          type: integer
      title: Recipe
      type: object
      x-examples: {}
      x-stoplight:
        id: mb2ht06tym8se
    Effect:
      example:
        ignore_int_min: true
        ignore_int_max: true
        formatted: formatted
        int_maximum: 5
        type:
          is_active: true
          is_meta: true
          name: name
          id: 5
        int_minimum: 1
      properties:
        int_minimum:
          description: "minimum int value, can be a single if ignore_int_max and no\
            \ ignore_int_min"
          type: integer
        int_maximum:
          description: "maximum int value, if not ignore_int_max and not ignore_int_min,\
            \ the effect has a range value"
          type: integer
        type:
          $ref: '#/components/schemas/EffectType'
        ignore_int_min:
          description: 'ignore the int min field because the actual value is a string.
            For readability the templated field is the only important field in this
            case. '
          type: boolean
        ignore_int_max:
          description: "ignore the int max field, if ignore_int_min is true, int min\
            \ is a single value"
          type: boolean
        formatted:
          description: all fields from above encoded in a single string
          type: string
      title: Effect
      type: object
      x-examples: {}
      x-tags:
      - meta
      x-stoplight:
        id: frixo5s02x57v
    EffectType:
      example:
        is_active: true
        is_meta: true
        name: name
        id: 5
      properties:
        id:
          type: integer
          x-stoplight:
            id: 8tu8tzm9pnpyl
        name:
          type: string
          x-stoplight:
            id: 57dfic9du6d6s
        is_active:
          description: Affects target or source actively.
          type: boolean
          x-stoplight:
            id: adhrzfp84g758
        is_meta:
          description: "true if a type is generated from the Api instead of Ankama.\
            \ In that case, always prefer showing the templated string and omit everything\
            \ else. The \"name\" field will have an english description of the meta\
            \ type. An example for such effects are class sets effects."
          type: boolean
          x-stoplight:
            id: 26vqqj1u5rff2
      title: EffectType
      type: object
      x-stoplight:
        id: h9lje70zy2774
    Images:
      description: "All images except icon are rendered in the background which can\
        \ take some time (up to hours if all data is completely generated from scratch).\
        \ Because of this, they can be null if they are not yet rendered."
      example:
        sd: sd
        icon: icon
        hq: hq
        hd: hd
      properties:
        icon:
          description: "64x64 px, always available"
          type: string
        sd:
          description: around 2x the resolution of icon
          nullable: true
          type: string
        hq:
          description: around 2x the resolution of sd
          nullable: true
          type: string
        hd:
          description: around 2x the resolution of hd
          nullable: true
          type: string
      title: Images
      type: object
      x-examples: {}
      x-stoplight:
        id: ebvisb0pnf46t
    Resource:
      example:
        effects:
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        level: 6
        name: name
        recipe:
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        description: description
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        pods: 1
        type:
          name: name
          id: 6
        conditions: ""
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/TranslatedId'
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: '#/components/schemas/Images'
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          nullable: true
          type: array
        conditions:
          allOf:
          - $ref: '#/components/schemas/ConditionNode'
          nullable: true
        recipe:
          items:
            $ref: '#/components/schemas/Recipe'
          nullable: true
          type: array
      title: Resource
      type: object
      x-examples: {}
      x-stoplight:
        id: 10otndsm7bw3k
    EquipmentSet:
      example:
        effects:
          key:
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
        contains_cosmetics: true
        highest_equipment_level: 1
        name: name
        contains_cosmetics_only: true
        equipment_ids:
        - 6
        - 6
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        equipment_ids:
          items:
            type: integer
          type: array
        effects:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Effect'
            minItems: 0
            type: array
            x-stoplight:
              id: 9zr0rwo061q8o
          title: SetEffects
          type: object
          x-stoplight:
            id: kdx5a0h3kp09h
        highest_equipment_level:
          type: integer
        contains_cosmetics:
          type: boolean
          x-stoplight:
            id: 7d1w5073pqtt7
        contains_cosmetics_only:
          type: boolean
          x-stoplight:
            id: vcdkkf976dyux
      title: EquipmentSet
      type: object
      x-stoplight:
        id: xmkp08r20yq44
    ListEquipmentSet:
      example:
        effects:
          key:
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
        contains_cosmetics: true
        level: 1
        name: name
        contains_cosmetics_only: true
        equipment_ids:
        - 5
        - 5
        items: 6
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        items:
          description: amount
          type: integer
        level:
          type: integer
        effects:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Effect'
            minItems: 0
            type: array
            x-stoplight:
              id: 9zr0rwo061q8o
          title: SetEffects
          type: object
          x-stoplight:
            id: kdx5a0h3kp09h
        equipment_ids:
          items:
            type: integer
          nullable: true
          type: array
        contains_cosmetics:
          type: boolean
          x-stoplight:
            id: uztiykrx0bobf
        contains_cosmetics_only:
          type: boolean
          x-stoplight:
            id: pv2l87kyv9fxa
      title: ListSet
      type: object
      x-examples: {}
      x-stoplight:
        id: jzo6pgvj144er
    Mount:
      example:
        effects:
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        name: name
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        family:
          name: name
          ankama_id: 6
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        family:
          $ref: '#/components/schemas/MountFamily'
        image_urls:
          $ref: '#/components/schemas/Images'
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          nullable: true
          type: array
      title: Mount
      type: object
      x-stoplight:
        id: t56c7qu8hapx4
    ListItems:
      example:
        _links:
          next: next
          last: last
          prev: prev
          first: first
        items:
        - critical_hit_probability: 2
          parent_set: ""
          level: 6
          is_weapon: true
          recipe:
          - quantity: 5
            item_subtype: item_subtype
            item_ankama_id: 1
          - quantity: 5
            item_subtype: item_subtype
            item_ankama_id: 1
          image_urls:
            sd: sd
            icon: icon
            hq: hq
            hd: hd
          description: description
          range:
            min: 2
            max: 4
          type:
            name: name
            id: 6
          effects:
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          max_cast_per_turn: 9
          name: name
          ap_cost: 3
          pods: 5
          conditions: ""
          critical_hit_bonus: 7
          ankama_id: 0
        - critical_hit_probability: 2
          parent_set: ""
          level: 6
          is_weapon: true
          recipe:
          - quantity: 5
            item_subtype: item_subtype
            item_ankama_id: 1
          - quantity: 5
            item_subtype: item_subtype
            item_ankama_id: 1
          image_urls:
            sd: sd
            icon: icon
            hq: hq
            hd: hd
          description: description
          range:
            min: 2
            max: 4
          type:
            name: name
            id: 6
          effects:
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          max_cast_per_turn: 9
          name: name
          ap_cost: 3
          pods: 5
          conditions: ""
          critical_hit_bonus: 7
          ankama_id: 0
      properties:
        _links:
          $ref: '#/components/schemas/PagedLinks'
        items:
          items:
            $ref: '#/components/schemas/ListItem'
          type: array
      title: ListItems
      type: object
      x-stoplight:
        id: wp54br61flkau
    ListEquipmentSets:
      example:
        sets:
        - effects:
            key:
            - ignore_int_min: true
              ignore_int_max: true
              formatted: formatted
              int_maximum: 5
              type:
                is_active: true
                is_meta: true
                name: name
                id: 5
              int_minimum: 1
            - ignore_int_min: true
              ignore_int_max: true
              formatted: formatted
              int_maximum: 5
              type:
                is_active: true
                is_meta: true
                name: name
                id: 5
              int_minimum: 1
          contains_cosmetics: true
          level: 1
          name: name
          contains_cosmetics_only: true
          equipment_ids:
          - 5
          - 5
          items: 6
          ankama_id: 0
        - effects:
            key:
            - ignore_int_min: true
              ignore_int_max: true
              formatted: formatted
              int_maximum: 5
              type:
                is_active: true
                is_meta: true
                name: name
                id: 5
              int_minimum: 1
            - ignore_int_min: true
              ignore_int_max: true
              formatted: formatted
              int_maximum: 5
              type:
                is_active: true
                is_meta: true
                name: name
                id: 5
              int_minimum: 1
          contains_cosmetics: true
          level: 1
          name: name
          contains_cosmetics_only: true
          equipment_ids:
          - 5
          - 5
          items: 6
          ankama_id: 0
        _links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        _links:
          $ref: '#/components/schemas/PagedLinks'
        sets:
          items:
            $ref: '#/components/schemas/ListEquipmentSet'
          type: array
      title: ListSetPaged
      type: object
      x-stoplight:
        id: kr369f842c2w9
    ListMounts:
      example:
        _links:
          next: next
          last: last
          prev: prev
          first: first
        items:
        - effects:
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          name: name
          image_urls:
            sd: sd
            icon: icon
            hq: hq
            hd: hd
          family:
            name: name
            ankama_id: 6
          ankama_id: 0
        - effects:
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          - ignore_int_min: true
            ignore_int_max: true
            formatted: formatted
            int_maximum: 5
            type:
              is_active: true
              is_meta: true
              name: name
              id: 5
            int_minimum: 1
          name: name
          image_urls:
            sd: sd
            icon: icon
            hq: hq
            hd: hd
          family:
            name: name
            ankama_id: 6
          ankama_id: 0
      properties:
        _links:
          $ref: '#/components/schemas/PagedLinks'
        items:
          items:
            $ref: '#/components/schemas/Mount'
          type: array
      title: ListMounts
      type: object
      x-stoplight:
        id: 67iikn0tj64zs
    PagedLinks:
      example:
        next: next
        last: last
        prev: prev
        first: first
      properties:
        first:
          nullable: true
          type: string
        prev:
          nullable: true
          type: string
        next:
          nullable: true
          type: string
        last:
          nullable: true
          type: string
      title: PagedLinks
      type: object
      x-stoplight:
        id: 60s06npdim49u
    Condition:
      properties:
        operator:
          type: string
        int_value:
          type: integer
        element:
          $ref: '#/components/schemas/TranslatedId'
      type: object
      x-stoplight:
        id: cfe46yvylz0b5
    ConditionNode:
      oneOf:
      - $ref: '#/components/schemas/ConditionRelation'
      - $ref: '#/components/schemas/ConditionLeaf'
      title: ConditionNode
      x-stoplight:
        id: kv2rib65himdt
      x-examples: {}
    ConditionLeaf:
      properties:
        is_operand:
          default: true
          description: always "true" for the leaf of a tree
          type: boolean
        condition:
          $ref: '#/components/schemas/Condition'
      type: object
      x-stoplight:
        id: qpb8of1ljcb4y
      x-examples: {}
    ConditionRelation:
      description: ""
      properties:
        is_operand:
          default: false
          description: always "false" for relations
          type: boolean
        relation:
          default: and
          description: "\"and\", \"or\""
          example: and
          type: string
        children:
          items:
            allOf:
            - $ref: '#/components/schemas/ConditionNode'
            nullable: true
            x-stoplight:
              id: i3dqn2ib2hjfl
          minItems: 0
          type: array
      title: ConditionRelation
      type: object
      x-stoplight:
        id: 1ubaw97npzw7b
      x-examples: {}
    Equipment:
      example:
        effects:
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        parent_set: ""
        level: 6
        is_weapon: true
        name: name
        recipe:
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        description: description
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        pods: 1
        type:
          name: name
          id: 6
        conditions: ""
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/TranslatedId'
        is_weapon:
          type: boolean
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: '#/components/schemas/Images'
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          nullable: true
          type: array
        conditions:
          allOf:
          - $ref: '#/components/schemas/ConditionNode'
          nullable: true
        recipe:
          items:
            $ref: '#/components/schemas/Recipe'
          nullable: true
          type: array
        parent_set:
          allOf:
          - $ref: '#/components/schemas/TranslatedId'
          nullable: true
      type: object
      x-examples: {}
      x-stoplight:
        id: wl02ch9nip85b
    Weapon:
      example:
        critical_hit_probability: 5
        parent_set: ""
        level: 6
        is_weapon: true
        recipe:
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        - quantity: 5
          item_subtype: item_subtype
          item_ankama_id: 1
        description: description
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        range:
          min: 2
          max: 4
        type:
          name: name
          id: 6
        effects:
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        - ignore_int_min: true
          ignore_int_max: true
          formatted: formatted
          int_maximum: 5
          type:
            is_active: true
            is_meta: true
            name: name
            id: 5
          int_minimum: 1
        max_cast_per_turn: 2
        name: name
        ap_cost: 7
        pods: 1
        conditions: ""
        critical_hit_bonus: 5
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/TranslatedId'
        is_weapon:
          description: always true when the item is a weapon. Many fields are now
            available. Always check for this flag first when getting single equipment
            items.
          type: boolean
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: '#/components/schemas/Images'
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          nullable: true
          type: array
        conditions:
          allOf:
          - $ref: '#/components/schemas/ConditionNode'
          nullable: true
        critical_hit_probability:
          type: integer
        critical_hit_bonus:
          type: integer
        max_cast_per_turn:
          type: integer
        ap_cost:
          type: integer
        range:
          $ref: '#/components/schemas/Range'
        recipe:
          items:
            $ref: '#/components/schemas/Recipe'
          nullable: true
          type: array
        parent_set:
          allOf:
          - $ref: '#/components/schemas/TranslatedId'
          nullable: true
      type: object
      x-examples: {}
      x-stoplight:
        id: 904f1afmcifdp
    ItemSubtype:
      example:
        name_id: name_id
        ankama_id: 1
      properties:
        ankama_id:
          type: integer
          x-stoplight:
            id: n5cqko2t6q5kx
        name_id:
          description: unique
          type: string
          x-stoplight:
            id: 914m1fu53jptk
      title: ItemSubtype
      type: object
      x-stoplight:
        id: vhpfmq2ovxmfg
    EquipmentSetEffects:
      additionalProperties:
        items:
          $ref: '#/components/schemas/Effect'
        minItems: 0
        type: array
        x-stoplight:
          id: 9zr0rwo061q8o
      title: SetEffects
      type: object
      x-stoplight:
        id: kdx5a0h3kp09h
    TranslatedId:
      example:
        name: name
        id: 6
      properties:
        id:
          description: unique
          type: integer
          x-stoplight:
            id: t60hbquleeyuy
        name:
          description: localized name
          type: string
          x-stoplight:
            id: isofaco3r3x4i
      title: TranslatedId
      type: object
    MountFamily:
      example:
        name: name
        ankama_id: 6
      properties:
        ankama_id:
          type: integer
          x-stoplight:
            id: ck57mmuv0bl4q
        name:
          description: localized name
          type: string
      title: MountFamily
      type: object
      x-stoplight:
        id: 7v7yek19r0zo5
    Error:
      example:
        code: code
        details: details
        error: error
        message: message
        status: 5
      properties:
        status:
          description: HTTP status code
          type: integer
          x-stoplight:
            id: 2m13q0eljxvuk
        error:
          description: HTTP status as text
          type: string
          x-stoplight:
            id: f05elfa5kv7m6
        code:
          description: API specific error identifier for switch-case handling
          type: string
          x-stoplight:
            id: f29krod4og7ez
        message:
          description: "General, human-friendly error description"
          type: string
          x-stoplight:
            id: jqri60r7fsgmj
        details:
          description: "Detailed, human-friendly problem description adopting specific\
            \ inputs of the request"
          type: string
          x-stoplight:
            id: 32jtq681vde1v
      title: Error
      type: object
      x-stoplight:
        id: 5skvt5sqsw5ic
    Almanax:
      example:
        date: date
        reward_kamas: 1
        bonus:
          description: description
          type:
            name: name
            id: id
        tribute:
          item:
            subtype: subtype
            name: name
            image_urls:
              sd: sd
              icon: icon
              hq: hq
              hd: hd
            ankama_id: 0
          quantity: 6
      properties:
        bonus:
          $ref: '#/components/schemas/Almanax_bonus'
        date:
          type: string
        tribute:
          $ref: '#/components/schemas/Almanax_tribute'
        reward_kamas:
          description: Amount of Kamas you get as reward for finishing this Almanax
            quest.
          nullable: true
          type: integer
          x-stoplight:
            id: oneb4usnoodzz
      title: Almanax
      type: object
      x-examples: {}
      x-stoplight:
        id: vrmvy5zbqek3g
    CreateTwitterWebhook:
      description: ""
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        preview_length: 280
        format: discord
        blacklist:
        - blacklist
        - blacklist
        callback: https://discord.com/api/webhooks/XYZ
        whitelist:
        - whitelist
        - whitelist
      properties:
        whitelist:
          items:
            type: string
          nullable: true
          type: array
        blacklist:
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/twitter
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        format:
          enum:
          - discord
          type: string
        preview_length:
          example: 280
          format: int32
          maximum: 280
          minimum: 0
          nullable: true
          type: integer
        callback:
          description: Discord Webhook URL
          example: https://discord.com/api/webhooks/XYZ
          format: uri
          type: string
      required:
      - callback
      - format
      - subscriptions
      title: CreateTwitterWebhook
      type: object
      x-examples:
        Example:
          subscriptions:
          - DOFUSfr
          format: discord
          preview_length: 280
          callback: https://discord.com/api/webhooks/XYZ
      x-stoplight:
        id: 7k5ozheexjnxv
    CreateRSSWebhook:
      description: ""
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        preview_length: 2000
        format: discord
        blacklist:
        - blacklist
        - blacklist
        callback: https://discord.com/api/webhooks/XYZ
        whitelist:
        - whitelist
        - whitelist
      properties:
        whitelist:
          items:
            type: string
          nullable: true
          type: array
        blacklist:
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/rss
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        format:
          enum:
          - discord
          type: string
        preview_length:
          example: 2000
          format: int32
          maximum: 4000
          minimum: 0
          nullable: true
          type: integer
        callback:
          description: Discord Webhook URL
          example: https://discord.com/api/webhooks/XYZ
          format: uri
          type: string
      required:
      - callback
      - format
      - subscriptions
      title: CreateRSSWebhook
      type: object
      x-examples:
        Example:
          whitelist:
          - retro
          subscriptions:
          - dofus3-en-official-news
          format: discord
          preview_length: 2000
          callback: https://discord.com/api/webhooks/XYZ
      x-stoplight:
        id: j8vhvwqn3jeoe
    PutRSSWebhook:
      description: ""
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        preview_length: 2000
        blacklist:
        - blacklist
        - blacklist
        whitelist:
        - whitelist
        - whitelist
      properties:
        whitelist:
          items:
            type: string
          nullable: true
          type: array
        blacklist:
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/rss
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
        preview_length:
          example: 2000
          format: int32
          maximum: 4000
          minimum: 0
          nullable: true
          type: integer
      title: PutRSSWebhook
      type: object
      x-examples:
        Example:
          preview_length: 60
      x-stoplight:
        id: 7uavm6v1r9v4y
    PutTwitterWebhook:
      description: ""
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        preview_length: 280
        blacklist:
        - blacklist
        - blacklist
        whitelist:
        - whitelist
        - whitelist
      properties:
        whitelist:
          items:
            type: string
          nullable: true
          type: array
        blacklist:
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/twitter
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
        preview_length:
          example: 280
          format: int32
          maximum: 280
          minimum: 0
          nullable: true
          type: integer
      title: PutTwitterWebhook
      type: object
      x-examples:
        Example:
          whitelist:
          - retro
          subscriptions:
          - dofus3-en-official-changelog
      x-stoplight:
        id: omtuayunn9wfk
    CreateAlmanaxWebhook:
      example:
        weekly_weekday: sunday
        subscriptions:
        - subscriptions
        - subscriptions
        intervals:
        - daily
        iso_date: false
        bonus_whitelist:
        - bonus_whitelist
        - bonus_whitelist
        daily_settings:
          timezone: Europe/Paris
          midnight_offset: 0
        mentions:
          kolossium-experience:
          - discord_id: 1234
            is_role: true
            ping_days_before: null
        format: discord
        callback: https://discord.com/api/webhooks/XYZ
        bonus_blacklist:
        - bonus_blacklist
        - bonus_blacklist
      properties:
        bonus_whitelist:
          description: "from all available bonuses (ids) from /dofus3/meta/{language}/almanax/bonuses"
          items:
            type: string
          nullable: true
          type: array
        bonus_blacklist:
          description: "from all available bonuses (ids) from /dofus3/meta/{language}/almanax/bonuses"
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/almanax
          items:
            type: string
          type: array
        format:
          enum:
          - discord
          type: string
        callback:
          description: Discord Webhook URL
          example: https://discord.com/api/webhooks/XYZ
          format: uri
          type: string
        daily_settings:
          $ref: '#/components/schemas/CreateAlmanaxWebhook_daily_settings'
        iso_date:
          default: false
          description: "If false, it will use common local time formats and weekday\
            \ translations. If true, the format is YYYY-MM-DD."
          nullable: true
          type: boolean
        mentions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/CreateAlmanaxWebhook_mentions_value_inner'
            type: array
          description: Almanax bonus ids mapped to array of mentions.
          example:
            kolossium-experience:
            - discord_id: 1234
              is_role: true
              ping_days_before: null
          nullable: true
          type: object
        intervals:
          description: |-
            - Daily posts each day, filtering with Black/Whitelist and mentions are applied daily.
            - Weekly posts the next 7 days (excluding the posting day) once per week at the specified time. With only weekly selected, of all mentions, only prior notices will come through daily. The 7 day preview gets filtered by the Black/Whitelist.
            - Monthly posts a preview of the next month from first to last date. The post will be on the last day of a month (ignoring day of the week) at the specified time. Mentions and filtering works like weekly.
            The biggest difference between daily and the other two is that daily always posts the current day while monthly and weekly only show future days. You can always combine the intervals by selecting multiple intervals for one hook or create multiple hooks for the same channel with different settings to get every highly specific combination you want.
          example:
          - daily
          items:
            enum:
            - daily
            - weekly
            - monthly
            type: string
          type: array
          uniqueItems: true
        weekly_weekday:
          description: When to post the weekly preview at the specified time.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          example: sunday
          nullable: true
          type: string
      required:
      - callback
      - format
      - intervals
      - subscriptions
      title: CreateAlmanaxWebhook
      type: object
      x-examples:
        Example:
          subscriptions:
          - dofus3_fr
          format: discord
          callback: https://discord.com/api/webhooks/XYZ
          daily_settings:
            timezone: Europe/Paris
            midnight_offset: 0
          iso_date: false
          mentions:
            kolossium-experience:
            - discord_id: 1234
              is_role: true
          intervals:
          - daily
          weekly_weekday: sunday
      x-stoplight:
        id: pyyh22g8b7mk0
    PutAlmanaxWebhook:
      example:
        weekly_weekday: sunday
        subscriptions:
        - subscriptions
        - subscriptions
        intervals:
        - daily
        iso_date: false
        bonus_whitelist:
        - bonus_whitelist
        - bonus_whitelist
        daily_settings:
          timezone: Europe/Paris
          midnight_offset: 0
        mentions:
          kolossium-experience:
          - discord_id: 1234
            is_role: true
            ping_days_before: null
        bonus_blacklist:
        - bonus_blacklist
        - bonus_blacklist
      properties:
        bonus_whitelist:
          description: |-
            from all available bonuses (ids) from /dofus3/meta/{language}/almanax/bonuses.
            Delete old entries with empty array []. Just null changes nothing.
          items:
            type: string
          nullable: true
          type: array
        bonus_blacklist:
          description: "from all available bonuses (ids) from /dofus3/meta/{language}/almanax/bonuses.\
            \ Delete old entries with empty array []. Just null changes nothing."
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/almanax
          items:
            type: string
          nullable: true
          type: array
        daily_settings:
          $ref: '#/components/schemas/CreateAlmanaxWebhook_daily_settings'
        iso_date:
          default: false
          description: "If false, it will use common local time formats and weekday\
            \ translations. If true, the format is YYYY-MM-DD."
          nullable: true
          type: boolean
        mentions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/CreateAlmanaxWebhook_mentions_value_inner'
            type: array
          description: Almanax bonus ids mapped to array of mentions.
          example:
            kolossium-experience:
            - discord_id: 1234
              is_role: true
              ping_days_before: null
          type: object
        intervals:
          example:
          - daily
          items:
            enum:
            - daily
            - weekly
            - monthly
            type: string
          nullable: true
          type: array
          uniqueItems: true
        weekly_weekday:
          description: When to post the weekly preview at the specified time.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          example: sunday
          nullable: true
          type: string
      title: PutAlmanaxWebhook
      type: object
      x-examples:
        Example:
          bonus_whitelist: []
          daily_settings:
            timezone: Europe/Paris
            midnight_offset: 0
          iso_date: false
          mentions:
            kolossium-experience:
            - discord_id: 1234
              is_role: true
          intervals:
          - daily
          weekly_weekday: sunday
      x-stoplight:
        id: htkpa9vrybcye
    RssWebhook:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        updated_at: 2022-10-25T15:32:37.406281+02:00
        preview_length: 2000
        last_fired_at: 2022-10-25T15:35:37.10324+02:00
        format: discord
        blacklist:
        - blacklist
        - blacklist
        created_at: 2022-10-25T15:32:37.406281+02:00
        id: id
        whitelist:
        - whitelist
        - whitelist
      properties:
        id:
          type: string
        whitelist:
          items:
            type: string
          nullable: true
          type: array
        blacklist:
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          items:
            type: string
          type: array
        format:
          enum:
          - discord
          type: string
        preview_length:
          example: 2000
          format: int32
          maximum: 4000
          minimum: 0
          type: integer
        created_at:
          example: 2022-10-25T15:32:37.406281+02:00
          format: date-time
          type: string
        last_fired_at:
          example: 2022-10-25T15:35:37.10324+02:00
          format: date-time
          nullable: true
          type: string
        updated_at:
          example: 2022-10-25T15:32:37.406281+02:00
          format: date-time
          type: string
      title: RSSWebhook
      type: object
      x-examples:
        Example:
          id: string
          subscriptions:
          - dofus3-fr-official-news
          format: discord
          preview_length: 150
          created_at: 2022-10-25T15:32:37.406281+02:00
          last_fired_at: 2022-10-25T15:35:37.103240+02:00
          updated_at: 2022-10-25T15:32:37.406281+02:00
      x-stoplight:
        id: e4x9508e2otmo
    TwitterWebhook:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        updated_at: 2022-10-25T15:32:37.406281+02:00
        preview_length: 280
        last_fired_at: 2022-10-25T15:35:37.10324+02:00
        format: discord
        blacklist:
        - blacklist
        - blacklist
        created_at: 2022-10-25T15:32:37.406281+02:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        whitelist:
        - whitelist
        - whitelist
      properties:
        id:
          format: uuid
          type: string
        whitelist:
          items:
            type: string
          nullable: true
          type: array
        blacklist:
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          items:
            type: string
          type: array
        format:
          enum:
          - discord
          type: string
        preview_length:
          example: 280
          format: int32
          maximum: 280
          minimum: 0
          type: integer
        created_at:
          example: 2022-10-25T15:32:37.406281+02:00
          format: date-time
          type: string
        last_fired_at:
          example: 2022-10-25T15:35:37.10324+02:00
          format: date-time
          nullable: true
          type: string
        updated_at:
          example: 2022-10-25T15:32:37.406281+02:00
          format: date-time
          type: string
      title: TwitterWebhook
      type: object
      x-examples:
        Example:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          whitelist:
          - unity
          blacklist:
          - retro
          subscriptions:
          - DOFUS_EN
          format: discord
          preview_length: 280
          created_at: 2022-10-25T15:32:37.406281+02:00
          last_fired_at: 2022-10-25T15:35:37.103240+02:00
          updated_at: 2022-10-25T15:32:37.406281+02:00
      x-stoplight:
        id: n7ja34vr6bc0v
    AlmanaxWebhook:
      description: ""
      example:
        weekly_weekday: sunday
        subscriptions:
        - subscriptions
        - subscriptions
        intervals:
        - daily
        iso_date: false
        updated_at: 2000-01-23T04:56:07.000+00:00
        last_fired_at: 2000-01-23T04:56:07.000+00:00
        daily_settings:
          timezone: Europe/Paris
          midnight_offset: 0
        bonus_whitelist:
        - bonus_whitelist
        - bonus_whitelist
        mentions:
          kolossium-experience:
          - discord_id: 1234
            is_role: true
            ping_days_before: null
        created_at: 2000-01-23T04:56:07.000+00:00
        bonus_blacklist:
        - bonus_blacklist
        - bonus_blacklist
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        daily_settings:
          $ref: '#/components/schemas/AlmanaxWebhook_daily_settings'
        bonus_whitelist:
          description: |-
            Only post when these bonuses come up.
            From all available bonuses (ids) from /dofus3/meta/{language}/almanax/bonuses.
          items:
            type: string
          nullable: true
          type: array
        bonus_blacklist:
          description: |-
            Skip the day when these bonuses come up.
            From all available bonuses (ids) from /dofus3/meta/{language}/almanax/bonuses
          items:
            type: string
          nullable: true
          type: array
        subscriptions:
          description: Get the available subscriptions with /meta/webhooks/almanax
          items:
            type: string
          type: array
        iso_date:
          default: false
          description: "If false, it will use common local time formats and weekday\
            \ translations. If true, the format is YYYY-MM-DD."
          type: boolean
        mentions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/CreateAlmanaxWebhook_mentions_value_inner'
            type: array
          description: Almanax bonus ids mapped to array of mentions.
          example:
            kolossium-experience:
            - discord_id: 1234
              is_role: true
              ping_days_before: null
          nullable: true
          type: object
        intervals:
          description: |-
            - Daily posts each day, filtering with Black/Whitelist and mentions are applied daily.
            - Weekly posts the next 7 days (excluding the posting day) once per week at the specified time. With only weekly selected, of all mentions, only prior notices will come through daily. The 7 day preview gets filtered by the Black/Whitelist.
            - Monthly posts a preview of the next month from first to last date. The post will be on the last day of a month (ignoring day of the week) at the specified time. Mentions and filtering works like weekly.
            The biggest difference between daily and the other two is that daily always posts the current day while monthly and weekly only show future days. You can always combine the intervals by selecting multiple intervals for one hook or create multiple hooks for the same channel with different settings to get every highly specific combination you want.
          example:
          - daily
          items:
            enum:
            - daily
            - weekly
            - monthly
            type: string
          type: array
          uniqueItems: true
        weekly_weekday:
          description: When to post the weekly preview at the specified time.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          example: sunday
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        last_fired_at:
          format: date-time
          nullable: true
          type: string
        updated_at:
          format: date-time
          type: string
      title: AlmanaxWebhook
      type: object
      x-examples:
        Example:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          daily_settings:
            timezone: Europe/Paris
            midnight_offset: 0
          bonus_whitelist:
          - plenty-to-harvest
          subscriptions:
          - dofus3_en
          iso_date: false
          mentions:
            kolossium-experience:
            - discord_id: 1234
              is_role: true
          intervals:
          - daily
          weekly_weekday: sunday
          created_at: 2019-08-24T14:15:22Z
          last_fired_at: 2019-08-24T14:15:22Z
          updated_at: 2019-08-24T14:15:22Z
      x-stoplight:
        id: x3oc9iaxf57wv
    Range:
      example:
        min: 2
        max: 4
      properties:
        min:
          type: integer
          x-stoplight:
            id: 0gn8zckrxbbr4
        max:
          type: integer
          x-stoplight:
            id: ujqak9zy7cxer
      title: Range
      type: object
      x-stoplight:
        id: kan42tn0dy7yf
    GameSearch:
      example:
        name: name
        type:
          name_id: name_id
        item_fields:
          level: 6
          image_urls:
            sd: sd
            icon: icon
            hq: hq
            hd: hd
          type:
            name_id: name_id
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
          x-stoplight:
            id: qoe7ecpftg215
        name:
          type: string
          x-stoplight:
            id: 8476cadtxa064
        type:
          $ref: '#/components/schemas/GameSearchType'
        item_fields:
          $ref: '#/components/schemas/GameSearchItem'
      title: GameSearch
      type: object
      x-stoplight:
        id: u8xaaojb27p5j
    GameSearchType:
      example:
        name_id: name_id
      properties:
        name_id:
          type: string
          x-stoplight:
            id: bc62jam7sk3ta
      title: GameSearchType
      type: object
      x-stoplight:
        id: ix89xa48iwyu1
    GameSearchItem:
      example:
        level: 6
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        type:
          name_id: name_id
      properties:
        type:
          $ref: '#/components/schemas/GameSearchType'
        level:
          nullable: true
          type: integer
          x-stoplight:
            id: e80w3jwdolhm5
        image_urls:
          $ref: '#/components/schemas/Images'
      title: GameSearchItem
      type: object
      x-stoplight:
        id: w969rujdj0538
    Version:
      example:
        release: release
        update_stamp: update_stamp
        version: version
      properties:
        version:
          type: string
        release:
          type: string
        update_stamp:
          type: string
      title: Version
      type: object
      x-examples:
        Beta Release:
          version: 3.0.5.9
          release: beta
          update_stamp: 2024-11-28T22:25:42.062971457+01:00
    get_meta_almanax_bonuses_200_response_inner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    get_meta_webhooks_twitter_200_response:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
      properties:
        subscriptions:
          items:
            type: string
          type: array
      type: object
      x-examples:
        example-1:
          subscriptions:
          - dofus3_en
          - dofus3_fr
          - dofus3_es
          - dofus3_it
          - dofus3_de
    Almanax_bonus:
      example:
        description: description
        type:
          name: name
          id: id
      properties:
        description:
          type: string
        type:
          $ref: '#/components/schemas/get_meta_almanax_bonuses_200_response_inner'
      type: object
    Almanax_tribute_item:
      example:
        subtype: subtype
        name: name
        image_urls:
          sd: sd
          icon: icon
          hq: hq
          hd: hd
        ankama_id: 0
      properties:
        ankama_id:
          type: integer
        image_urls:
          $ref: '#/components/schemas/Images'
        name:
          type: string
        subtype:
          type: string
      type: object
    Almanax_tribute:
      example:
        item:
          subtype: subtype
          name: name
          image_urls:
            sd: sd
            icon: icon
            hq: hq
            hd: hd
          ankama_id: 0
        quantity: 6
      properties:
        item:
          $ref: '#/components/schemas/Almanax_tribute_item'
        quantity:
          type: integer
      type: object
    CreateAlmanaxWebhook_daily_settings:
      example:
        timezone: Europe/Paris
        midnight_offset: 0
      nullable: true
      properties:
        timezone:
          default: Europe/Paris
          description: Timezone of your community to determine midnight.
          example: Europe/Paris
          nullable: true
          type: string
        midnight_offset:
          default: 0
          description: Hours added to midnight at the selected timezone. 8 = 8:00
            in the morning.
          example: 0
          maximum: 23
          minimum: 0
          nullable: true
          type: integer
      type: object
    CreateAlmanaxWebhook_mentions_value_inner:
      description: Mention
      properties:
        discord_id:
          description: User or role ID directly from Discord. Activate developer mode
            and right click a user or role to get them.
          example: 1234
          type: integer
        is_role:
          description: Whether an ID describes a role (true) or user (false). This
            is needed for formatting the mention command so Discord understands it.
          example: true
          type: boolean
        ping_days_before:
          description: Get a mention days before the bonus comes up. It will post
            on the specified time. Also works when the interval is not daily.
          example: 1
          maximum: 31
          minimum: 1
          nullable: true
          type: integer
      type: object
    AlmanaxWebhook_daily_settings:
      example:
        timezone: Europe/Paris
        midnight_offset: 0
      properties:
        timezone:
          default: Europe/Paris
          description: Timezone of your community to determine midnight.
          example: Europe/Paris
          type: string
        midnight_offset:
          default: 0
          description: Hours added to midnight at the selected timezone. 8 = 8:00
            in the morning.
          example: 0
          type: integer
      type: object
  securitySchemes: {}
x-stoplight:
  id: ezdjxlif28ceb
